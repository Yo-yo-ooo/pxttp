     1 00000000                                 ; haribote-ipl
     2 00000000                                 ; TAB=4
     3 00000000                                 
     4  = 0000000A                              CYLS	EQU		10				; 声明CYLS=10
     5 00000000                                 
     6                                          		ORG		0x7c00			; 指明程序装载地址
     7 00007C00                                 
     8 00007C00                                 ; 标准FAT12格式软盘专用的代码 Stand FAT12 format floppy code
     9 00007C00                                 
    10 00007C00 EB 4E                           		JMP		entry
    11 00007C02 90                              		DB		0x90
    12 00007C03 48 41 52 49 42 4F 54 45         		DB		"HARIBOTE"		; 启动扇区名称（8字节）
    13 00007C0B 0200                            		DW		512				; 每个扇区（sector）大小（必须512字节）
    14 00007C0D 01                              		DB		1				; 簇（cluster）大小（必须为1个扇区）
    15 00007C0E 0001                            		DW		1				; FAT起始位置（一般为第一个扇区）
    16 00007C10 02                              		DB		2				; FAT个数（必须为2）
    17 00007C11 00E0                            		DW		224				; 根目录大小（一般为224项）
    18 00007C13 0B40                            		DW		2880			; 该磁盘大小（必须为2880扇区1440*1024/512）
    19 00007C15 F0                              		DB		0xf0			; 磁盘类型（必须为0xf0）
    20 00007C16 0009                            		DW		9				; FAT的长度（必9扇区）
    21 00007C18 0012                            		DW		18				; 一个磁道（track）有几个扇区（必须为18）
    22 00007C1A 0002                            		DW		2				; 磁头数（必2）
    23 00007C1C 00000000                        		DD		0				; 不使用分区，必须是0
    24 00007C20 00000B40                        		DD		2880			; 重写一次磁盘大小
    25 00007C24 00 00 29                        		DB		0,0,0x29		; 意义不明（固定）
    26 00007C27 FFFFFFFF                        		DD		0xffffffff		; （可能是）卷标号码
    27 00007C2B 48 41 52 49 42 4F 54 45 4F 53   		DB		"HARIBOTEOS "	; 磁盘的名称（必须为11字?，不足填空格）
       00007C35 20 
    28 00007C36 46 41 54 31 32 20 20 20         		DB		"FAT12   "		; 磁盘格式名称（必??8字?，不足填空格）
    29 00007C3E 00 00 00 00 00 00 00 00 00 00   		RESB	18				; 先空出18字节
       00007C48 00 00 00 00 00 00 00 00 
    30 00007C50                                 
    31 00007C50                                 ; 程序主体
    32 00007C50                                 
    33 00007C50                                 entry:
    34 00007C50 B8 0000                         		MOV		AX,0			; 初始化寄存器
    35 00007C53 8E D0                           		MOV		SS,AX
    36 00007C55 BC 7C00                         		MOV		SP,0x7c00
    37 00007C58 8E D8                           		MOV		DS,AX
    38 00007C5A                                 
    39 00007C5A                                 ; 读取磁盘
    40 00007C5A                                 
    41 00007C5A B8 0820                         		MOV		AX,0x0820
    42 00007C5D 8E C0                           		MOV		ES,AX
    43 00007C5F B5 00                           		MOV		CH,0			; 柱面0
    44 00007C61 B6 00                           		MOV		DH,0			; 磁头0
    45 00007C63 B1 02                           		MOV		CL,2			; 扇区2
    46 00007C65 BB 0167                         		MOV		BX,18*2*CYLS-1	; 要读取的合计扇区数
    47 00007C68 E8 0032                         		CALL	readfast		; 告诉读取
    48 00007C6B                                 
    49 00007C6B                                 ; 读取完毕，跳转到haribote.sys执行！
    50 00007C6B 88 2E 0FF0                      		MOV		[0x0ff0],CH		; 记录IPL实际读取了多少内容
    51 00007C6F E9 458E                         		JMP		0xc200
    52 00007C72                                 
    53 00007C72                                 error:
    54 00007C72 B8 0000                         		MOV		AX,0
    55 00007C75 8E C0                           		MOV		ES,AX
    56 00007C77 BE 7C8F                         		MOV		SI,msg
    57 00007C7A                                 putloop:
    58 00007C7A 8A 04                           		MOV		AL,[SI]
    59 00007C7C 83 C6 01                        		ADD		SI,1			; 给SI加1
    60 00007C7F 3C 00                           		CMP		AL,0
    61 00007C81 74 09                           		JE		fin
    62 00007C83 B4 0E                           		MOV		AH,0x0e			; 显示一个文字
    63 00007C85 BB 000F                         		MOV		BX,15			; 指定字符颜色
    64 00007C88 CD 10                           		INT		0x10			; 调用显卡BIOS
    65 00007C8A EB EE                           		JMP		putloop
    66 00007C8C                                 fin:
    67 00007C8C F4                              		HLT						; 让CPU停止，等待指令
    68 00007C8D EB FD                           		JMP		fin				; 无限循环
    69 00007C8F                                 msg:
    70 00007C8F 0A 0A                           		DB		0x0a, 0x0a		; 换行两次
    71 00007C91 6C 6F 61 64 20 65 72 72 6F 72   		DB		"load error"
    72 00007C9B 0A                              		DB		0x0a			; 换行
    73 00007C9C 00                              		DB		0
    74 00007C9D                                 
    75 00007C9D                                 readfast:	; 使用AL尽量一次性读取数据 从此开始
    76 00007C9D                                 ; ES:读取地址, CH:柱面, DH:磁头, CL:扇区, BX:读取扇区数
    77 00007C9D                                 
    78 00007C9D 8C C0                           		MOV		AX,ES			; < 通过ES计算AL的最大值 >
    79 00007C9F C1 E0 03                        		SHL		AX,3			; 将AX除以32，将结果存入AH（SHL是左移位指令）
    80 00007CA2 80 E4 7F                        		AND		AH,0x7f		; AH是AH除以128所得的余数（512*128=64K）
    81 00007CA5 B0 80                           		MOV		AL,128		; AL = 128 - AH; AH是AH除以128所得的余数（512*128=64K）
    82 00007CA7 28 E0                           		SUB		AL,AH
    83 00007CA9                                 
    84 00007CA9 88 DC                           		MOV		AH,BL			; < 通过BX计算AL的最大值并存入AH >
    85 00007CAB 80 FF 00                        		CMP		BH,0			; if (BH != 0) { AH = 18; }
    86 00007CAE 74 02                           		JE		.skip1
    87 00007CB0 B4 12                           		MOV		AH,18
    88 00007CB2                                 .skip1:
    89 00007CB2 38 E0                           		CMP		AL,AH			; if (AL > AH) { AL = AH; }
    90 00007CB4 76 02                           		JBE		.skip2
    91 00007CB6 88 E0                           		MOV		AL,AH
    92 00007CB8                                 .skip2:
    93 00007CB8                                 
    94 00007CB8 B4 13                           		MOV		AH,19			; < 通过CL计算AL的最大值并存入AH >
    95 00007CBA 28 CC                           		SUB		AH,CL			; AH = 19 - CL;
    96 00007CBC 38 E0                           		CMP		AL,AH			; if (AL > AH) { AL = AH; }
    97 00007CBE 76 02                           		JBE		.skip3
    98 00007CC0 88 E0                           		MOV		AL,AH
    99 00007CC2                                 .skip3:
   100 00007CC2                                 
   101 00007CC2 53                              		PUSH	BX
   102 00007CC3 BE 0000                         		MOV		SI,0			; 计算失败次数的寄存器
   103 00007CC6                                 retry:
   104 00007CC6 B4 02                           		MOV		AH,0x02			; AH=0x02 : 读取磁盘
   105 00007CC8 BB 0000                         		MOV		BX,0
   106 00007CCB B2 00                           		MOV		DL,0x00			; A盘
   107 00007CCD 06                              		PUSH	ES
   108 00007CCE 52                              		PUSH	DX
   109 00007CCF 51                              		PUSH	CX
   110 00007CD0 50                              		PUSH	AX
   111 00007CD1 CD 13                           		INT		0x13			; 调用磁盘BIOS
   112 00007CD3 73 14                           		JNC		next			; 没有出错的话则跳转至next
   113 00007CD5 83 C6 01                        		ADD		SI,1			; 将SI加1
   114 00007CD8 83 FE 05                        		CMP		SI,5			; 将SI与5比较
   115 00007CDB 73 95                           		JAE		error			; SI >= 5则跳转至error
   116 00007CDD B4 00                           		MOV		AH,0x00
   117 00007CDF B2 00                           		MOV		DL,0x00		; A盘
   118 00007CE1 CD 13                           		INT		0x13			; 驱动器重置
   119 00007CE3 58                              		POP		AX
   120 00007CE4 59                              		POP		CX
   121 00007CE5 5A                              		POP		DX
   122 00007CE6 07                              		POP		ES
   123 00007CE7 EB DD                           		JMP		retry
   124 00007CE9                                 next:
   125 00007CE9 58                              		POP		AX
   126 00007CEA 59                              		POP		CX
   127 00007CEB 5A                              		POP		DX
   128 00007CEC 5B                              		POP		BX				; 将ES的内容存入BX
   129 00007CED C1 EB 05                        		SHR		BX,5			; 将BX由16字节为单位转换为512字节为单位
   130 00007CF0 B4 00                           		MOV		AH,0
   131 00007CF2 01 C3                           		ADD		BX,AX			; BX += AL;
   132 00007CF4 C1 E3 05                        		SHL		BX,5			; 将BX由512字节为单位转换为16字节为单位
   133 00007CF7 8E C3                           		MOV		ES,BX			; 相当于EX += AL * 0x20;
   134 00007CF9 5B                              		POP		BX
   135 00007CFA 29 C3                           		SUB		BX,AX
   136 00007CFC 74 18                           		JZ		.ret
   137 00007CFE 00 C1                           		ADD		CL,AL			; 将CL加上AL
   138 00007D00 80 F9 12                        		CMP		CL,18			; 将CL与18比较
   139 00007D03 76 98                           		JBE		readfast	; CL <= 18则跳转至readfast
   140 00007D05 B1 01                           		MOV		CL,1
   141 00007D07 80 C6 01                        		ADD		DH,1
   142 00007D0A 80 FE 02                        		CMP		DH,2
   143 00007D0D 72 8E                           		JB		readfast	; DH < 2则跳转至readfast
   144 00007D0F B6 00                           		MOV		DH,0
   145 00007D11 80 C5 01                        		ADD		CH,1
   146 00007D14 EB 87                           		JMP		readfast
   147 00007D16                                 .ret:
   148 00007D16 C3                              		RET
   149 00007D17                                 
   150 00007D17 00 00 00 00 00 00 00 00 00 00   		RESB	0x7dfe-$	; 到0x7dfe为止用0x00填充的指令
       00007D21 00 00 00 00 00 00 00 00 00 00 
       00007D2B 00 00 00 00 00 00 00 00 00 00 
       00007D35 00 00 00 00 00 00 00 00 00 00 
       00007D3F 00 00 00 00 00 00 00 00 00 00 
       00007D49 00 00 00 00 00 00 00 00 00 00 
       00007D53 00 00 00 00 00 00 00 00 00 00 
       00007D5D 00 00 00 00 00 00 00 00 00 00 
       00007D67 00 00 00 00 00 00 00 00 00 00 
       00007D71 00 00 00 00 00 00 00 00 00 00 
       00007D7B 00 00 00 00 00 00 00 00 00 00 
       00007D85 00 00 00 00 00 00 00 00 00 00 
       00007D8F 00 00 00 00 00 00 00 00 00 00 
       00007D99 00 00 00 00 00 00 00 00 00 00 
       00007DA3 00 00 00 00 00 00 00 00 00 00 
       00007DAD 00 00 00 00 00 00 00 00 00 00 
       00007DB7 00 00 00 00 00 00 00 00 00 00 
       00007DC1 00 00 00 00 00 00 00 00 00 00 
       00007DCB 00 00 00 00 00 00 00 00 00 00 
       00007DD5 00 00 00 00 00 00 00 00 00 00 
       00007DDF 00 00 00 00 00 00 00 00 00 00 
       00007DE9 00 00 00 00 00 00 00 00 00 00 
       00007DF3 00 00 00 00 00 00 00 00 00 00 
       00007DFD 00 
   151 00007DFE                                 
   152 00007DFE 55 AA                           		DB		0x55, 0xaa
